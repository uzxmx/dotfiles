#!/usr/bin/env bash

set -e

export DOTFILES_DIR="${DOTFILES_DIR:-$(cd -- "$(dirname "$0")/.." &>/dev/null && pwd -P)}"
git_dir="$DOTFILES_DIR/scripts/git"

source "$DOTFILES_DIR/scripts/lib/cli.sh"

usage() {
  cat <<-EOF
Wrapper for git utility.

Subcommands:
  s               - show status
  a               - archive
  cl              - clone with depth 1
  d               - enhanced diff utility by fzf
  ignore_for      - output .gitignore contents for some topic
  cm              - enhanced commit utility
  pt              - push a local branch to a remote branch
  l               - enhanced log utility by fzf
  search          - search file contents in the git history
  g, grep         - search file contents in the working directory, or a tree (ref)
  show_commit     - show files of a commit by fzf and tmux
  rm_from_history - remove files from git history
  update_commit   - change the last commit message (the commit has not been pushed)
  init_hooks      - initialize git hooks and trigger post-checkout hook
  cleanb          - clean local branches that are gone on the remote
  clean           - clean untracked files interactively
  w, worktree     - worktree utilities
  root            - show git root directory
  ignore_status   - check whether a file is ignored by git
  unshallow       - make a full clone for a shallow one
EOF
  exit 1
}

case "$1" in
  "")
    git status .
    ;;
  s)
    git status
    ;;
  a | cl | d | l | show_commit | pt | rm_from_history | \
  search | g | grep | update_commit | ignore_for | cm | \
  init_hooks | cleanb | w | worktree | root | ignore_status | \
  unshallow | clean)
    case "$1" in
      a)
        name="archive"
        ;;
      cl)
        name="clone"
        ;;
      d)
        name="diff"
        ;;
      l)
        name="log"
        ;;
      pt)
        name="push_to"
        ;;
      g)
        name="grep"
        ;;
      w)
        name="worktree"
        ;;
      *)
        name="$1"
        ;;
    esac
    source "$git_dir/$name.sh"
    run "$@"
    ;;
  -h | --help)
    usage
    ;;
  -)
    shift
    git "$@"
    ;;
  *)
    git "$@"
    ;;
esac

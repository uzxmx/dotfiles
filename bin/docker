#!/usr/bin/env bash

set -e

dotfiles_dir="$(realpath "$(dirname "$BASH_SOURCE")/..")"
docker_dir="$dotfiles_dir/scripts/docker"

usage() {
  cat <<-EOF
Wrapper for docker utility.

Subcommands:
  p          - pull image from a mirror
  l          - show logs of a container selected by fzf
  e, exec    - execute a comand in a container selected by fzf
  r, run     - run a docker image
  s          - manage services
  list_tags  - list image tags from dockerhub
  pids       - show pids of containers
  prune      - remove unused data
  fzf        - search a command by its description and execute
EOF
  exit 1
}

source "$dotfiles_dir/scripts/lib/path.sh"
PATH="$(new_path_exclude "$dotfiles_dir/bin")"

FZF_COMMANDS="Show exited containers\tdocker ps --filter=\"status=exited\"
Remove containers exited before\t$docker_dir/rm --exited
Remove containers with created status\t$docker_dir/rm --created
"

alias_cmd() {
  local new_name="$1"
  local old_name="$2"
  eval "
    usage_$new_name() {
      usage_$old_name \"\$@\"
    }
    cmd_$new_name() {
      cmd_$old_name \"\$@\"
    }
  "
}

usage_list_tags() {
  cat <<-EOF
Usage: docker list_tags <image>

List docker image tags from dockerhub.

Examples:
  $ docker list_tags alpine
  $ docker list_tags bitnami/phabricator
EOF
  exit 1
}

cmd_list_tags() {
  "$docker_dir/list_tags" "$@"
}

usage_pids() {
  cat <<-EOF
Usage: docker pids

Show pids of containers.
EOF
  exit 1
}

cmd_pids() {
  "$docker_dir/inspect_pid" "$@"
}

cmd_prune() {
  # source "$dotfiles_dir/scripts/lib/prompt.sh"
  # local reply="$(yesno "Are you sure you want to remove all unused images and volumes? (y/N)" "no")"
  # [ "$reply" = "no" ] && echo Cancelled && exit
  # docker image prune -a -f
  # docker volume prune -f
  docker system prune -a
}

run() {
  local cmd="$1"
  shift
  case "$1" in
    -h)
      type "usage_$cmd" &>/dev/null && "usage_$cmd"
      ;;
  esac
  "cmd_$cmd" "$@"
}

case "$1" in
  fzf)
    source "$dotfiles_dir/scripts/lib/cmd_fzf.sh"
    run "$@"
    ;;
  list_tags | pids | prune)
    run "$@"
    ;;
  l | e | exec | p | r | run | s)
    case "$1" in
      l)
        name="logs"
        ;;
      e)
        name="exec"
        ;;
      p)
        name="pull_image"
        ;;
      r)
        name="run"
        ;;
      s)
        name="service"
        ;;
      *)
        name="$1"
    esac
    source "$docker_dir/$name.sh"
    run "$@"
    ;;
  -h)
    usage
    ;;
  -)
    shift
    docker "$@"
    ;;
  *)
    docker "$@"
    ;;
esac

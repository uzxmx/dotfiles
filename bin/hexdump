#!/usr/bin/env bash

set -eo pipefail

dotfiles_dir="$(realpath "$(dirname "$BASH_SOURCE")/..")"
hexdump_dir="$dotfiles_dir/scripts/hexdump"

source "$dotfiles_dir/scripts/lib/cli.sh"

usage() {
  cat <<-EOF
Wrapper for hexdump utility.

Subcommands:
  p, parse - parse hexadecimal string to binary, and vice versa
  hex      - display the input in hexadecimal by ascii
  decimal  - display the input in decimal by ascii
  oct      - display the input in octal by ascii
  bin      - display the input integer in binary

Example:
  # Dump a binary file
  hexdump file.bin

  # Dump a string
  echo -n foo | hexdump
EOF
  exit 1
}

execute_hexdump() {
  local text="$1"
  shift
  if [ -n "$text" ]; then
    echo -n "$text" | hexdump "$@"
  else
    hexdump "$@"
  fi
}

usage_hex() {
  cat <<-EOF
Usage: hexdump hex <text>

Display the input (from argument or pipe) in hexadecimal by ascii.

Example:
  $> hexdump hex text
EOF
  exit 1
}

cmd_hex() {
  execute_hexdump "$1" -v -e '"0x" 1/1 "%02x" " "'
}

usage_decimal() {
  cat <<-EOF
Usage: hexdump decimal <text>

Display the input (from argument or pipe) in decimal by ascii.

Example:
  $> hexdump decimal text
EOF
  exit 1
}

cmd_decimal() {
  execute_hexdump "$1" -v -e '"" 1/1 "%d" " "'
}

usage_oct() {
  cat <<-EOF
Usage: hexdump oct <text>

Display the input (from argument or pipe) in octal by ascii.

Example:
  $> hexdump oct text
EOF
  exit 1
}

cmd_oct() {
  execute_hexdump "$1" -v -e '"" 1/1 "%o" " "'
}

usage_bin() {
  cat <<-EOF
Usage: hexdump bin <integer>

Display the input integer (from argument or pipe) in binary.

Example:
  $> hexdump bin 255
EOF
  exit 1
}

cmd_bin() {
  [ "$#" -eq 0 ] && usage_bin
  for i in "$@"; do
    perl -e "printf \"%b\n\", $i"
  done
}

case "$1" in
  hex | decimal | oct | bin)
    cmd="$1"
    shift
    case "$1" in
      -h)
        type "usage_$cmd" &>/dev/null && "usage_$cmd"
        ;;
    esac
    "cmd_$cmd" "$@"
    ;;
  p | parse)
    case "$1" in
      p)
        name="parse"
        ;;
      *)
        name="$1"
    esac
    source "$hexdump_dir/$name.sh"
    run "$@"
    ;;
  -h)
    usage
    ;;
  -)
    shift
    hexdump "$@"
    ;;
  *)
    hexdump -C "$@"
esac

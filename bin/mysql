#!/usr/bin/env bash

set -eo pipefail

dotfiles_dir="$(realpath "$(dirname "$BASH_SOURCE")/..")"
mysql_dir="$dotfiles_dir/scripts/mysql"

usage() {
  cat <<-EOF
Wrapper for mysql utility.

When no executable is found and docker is available, it will be run by docker.
Specify 'SELECT_VERSION=1' to select a version when there are multiple images.

Subcommands:
  s, source          - source a sql file
  c, connect         - connect to the server
  sv, server_version - show server version
  csv                - export data as CSV format
EOF
  exit 1
}

source "$dotfiles_dir/scripts/lib/path.sh"
PATH="$(new_path_exclude "$dotfiles_dir/bin")"

source "$dotfiles_dir/scripts/lib/prompt.sh"
source "$dotfiles_dir/scripts/lib/docker.sh"

_run_cli() {
  local prefix="$1"
  shift
  if [ -z "$cli" ]; then
    cli="$(check_cmd_with_docker_fallback mysql mysql mysql:5.7.32)"
  fi
  $prefix $cli --default-character-set=utf8 "$@"
}

run_cli() {
  _run_cli '' "$@"
}

alias_cmd() {
  local new_name="$1"
  local old_name="$2"
  eval "
    usage_$new_name() {
      usage_$old_name \"\$@\"
    }
    cmd_$new_name() {
      cmd_$old_name \"\$@\"
    }
  "
}

run() {
  local cmd="$1"
  shift
  case "$1" in
    -h)
      type "usage_$cmd" &>/dev/null && "usage_$cmd"
      ;;
  esac
  "cmd_$cmd" "$@"
}

case "$1" in
  s | source | c | connect | sv | server_version | csv)
    case "$1" in
      csv)
        name="csv"
        ;;
      *)
        name="mysql"
    esac
    source "$mysql_dir/$name.sh"
    run "$@"
    ;;
  -h)
    usage
    ;;
  *)
    # Run connect by default.
    source "$mysql_dir/mysql.sh"
    run connect "$@"
    ;;
esac

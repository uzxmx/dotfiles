#!/usr/bin/env bash

set -eo pipefail

export DOTFILES_DIR="${DOTFILES_DIR:-$(cd -- "$(dirname "$0")/.." &>/dev/null && pwd -P)}"

source "$DOTFILES_DIR/scripts/lib/utils.sh"
source "$DOTFILES_DIR/scripts/lib/utils/random.sh"

usage() {
  cat <<-EOF
Usage: extract <archive-file>

Extract archive.
EOF
  exit 1
}

[ "$#" -eq 0 ] && usage

while [ "$#" -gt 0 ]; do
  case "$1" in
    -*)
      usage
      ;;
    *)
      file="$1"
  esac
  shift
done

if [ ! -f "$file" ]; then
  abort 'Invalid input file'
fi

fullpath="$(realpath "$file")"
if [[ "$file" =~ (.+)(\.tar\.gz|\.tgz)$ ]]; then
  is_tar="1"
  tar_opts=(-z)
elif [[ "$file" =~ (.+)(\.tar\.xz|\.txz)$ ]]; then
  is_tar="1"
  tar_opts=(-J)
elif [[ "$file" =~ (.+)(\.tar\.bz2|\.tbz|\.tb2)$ ]]; then
  is_tar="1"
  tar_opts=(-j)
elif [[ "$file" =~ (.+)\.tar$ ]]; then
  is_tar="1"
  tar_opts=()
elif [[ "$file" =~ (.+)\.(zip|jar|ipa|apk)$ ]]; then
  cmd=(unzip "$fullpath")
elif [[ "$file" =~ (.+)\.rar$ ]]; then
  cmd=(unrar x "$fullpath")
elif [[ "$file" =~ (.+)\.gz$ ]]; then
  dest_file="$(basename -s .gz "$file")"
  if [ -e "$dest_file" ]; then
    echo "File $dest_file already exists, please remove it first." 1>&2
    exit 1
  fi
  gunzip -c "$fullpath" >"$dest_file"
  echo "$dest_file generated." 1>&2
  exit
else
  abort "Cannot extract $file"
fi

create_directory() {
  local name="$1"
  while [ -d "$name" ]; do
    name="$1.$(random_string 4)"
  done
  mkdir "$name"
  echo "$name"
}

finalpath="$(create_directory "${BASH_REMATCH[1]}")"
cd "$finalpath"

if [ -n "$is_tar" ]; then
  if [ "$(tar -tf "$fullpath" | wc -l)" -lt 100 ]; then
    tar_opts+=(-v)
  fi
  tar "${tar_opts[@]}" -xf "$fullpath" 1>&2
else
  "${cmd[@]}" 1>&2
fi

# If there is only one file in the current directory and it's a directory, then
# we need to append it to the final path.
files="$(ls -a | grep -v '^\(\.\|\.\.\)$')"
if [ "$(echo "$files" | wc -l)" -eq "1" -a -d "${files[0]}" ]; then
  finalpath="$finalpath/${files[0]}"
fi

echo "Successfully extracted to $finalpath"

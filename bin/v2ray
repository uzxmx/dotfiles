#!/usr/bin/env bash

set -eo pipefail

export DOTFILES_DIR="${DOTFILES_DIR:-$(cd -- "$(dirname "$0")/.." &>/dev/null && pwd -P)}"
v2ray_dir="$DOTFILES_DIR/scripts/v2ray"

source "$DOTFILES_DIR/scripts/lib/cli.sh"

usage() {
  cat <<-EOF
Wrapper for v2ray utility.

Subcommands:
  start/stop/restart - start/stop/restart v2ray service
  s, status          - show status of v2ray service
  l, log             - show logs of v2ray service
  c, config          - edit config of v2ray service and restart on change
EOF
  exit 1
}

get_pid() {
  if is_mac; then
    launchctl list | grep v2ray | awk '{print $1}'
  else
    cat /var/run/v2ray.pid 2>/dev/null || true
  fi
}

v2ray_is_running() {
  local pid=$(get_pid)
  if [ -n "$pid" ]; then
    ps "$pid" &>/dev/null
  else
    false
  fi
}

cmd_start() {
  if ! v2ray_is_running; then
    if is_mac; then
      if ! launchctl list | grep com.v2ray.core &>/dev/null; then
        launchctl load "$DOTFILES_DIR/v2ray/com.v2ray.core.plist"
      fi
      launchctl start com.v2ray.core
    else
      sudo service v2ray start
    fi
  fi
}

cmd_stop() {
  if v2ray_is_running; then
    if is_mac; then
      launchctl stop com.v2ray.core
    else
      sudo service v2ray stop
    fi
  fi
}

cmd_restart() {
  cmd_stop
  cmd_start
}

cmd_status() {
  if v2ray_is_running; then
    echo 'v2ray is running'
  else
    echo 'v2ray is NOT running'
    exit 1
  fi
}
alias_cmd s status

cmd_log() {
  if ! v2ray_is_running; then
    echo 'v2ray is NOT running'
    exit
  fi

  if is_mac; then
    tail -F /tmp/v2ray.log
  else
    tail -F /var/log/v2ray.log
  fi
}
alias_cmd l log

case "$1" in
  start | stop | restart | s | status | l | log | c | config)
    case "$1" in
      c | config)
        source "$v2ray_dir/config.sh"
        ;;
    esac
    run "$@"
    ;;
  -h)
    usage
    ;;
  -)
    shift
    v2ray "$@"
    ;;
  *)
    v2ray "$@"
    ;;
esac

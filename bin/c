#!/usr/bin/env bash

set -eo pipefail

export DOTFILES_DIR="${DOTFILES_DIR:-$(cd -- "$(dirname "$0")/../.." &>/dev/null && pwd -P)}"
export DOTFILES_TARGET_DIR="${DOTFILES_TARGET_DIR:-$HOME}"

source "$DOTFILES_DIR/scripts/lib/utils/common.sh"
source "$DOTFILES_DIR/scripts/lib/fzf.sh"

usage() {
  cat <<-EOF
Utility to change to a target directory quickly. You can provide more paths as
candidates by creating a custom shell script at ~/.cd_paths.sh, and outputting
each directory per line.

Options:
  c, -c change to a directory under current working directory
  p, -p change to a parent directory (so you don't need to 'cd ..' one level by one level)
EOF
  exit 1
}

change_directory() {
  # Escape all spaces.
  echo cd "${1// /\\ }" >&3
  exit 102
}

check_directory() {
  if [ -z "$DOTFILES_NON_INTRUSIVE_MODE" ] && [[ "$1/" =~ ~/.resources/ ]] && [ ! -e ~/.resources ]; then
    git clone git@github.com:uzxmx/resources ~/.resources
  else
    [ ! -e "$1" ] && mkdir -p "$1"
  fi
  true
}

main_loop_with_fzf() {
  while true; do
    if [ -z "$directories" ]; then
      echo 'No directory available, exit'
      break
    fi

    unset result

    call_fzf result +m --exit-0 "$@" <<<"$directories"

    [ -z "${result[*]}" ] && break

    key="${result[0]}"
    result=("${result[1]}")
    case "$key" in
      ctrl-d)
        check_directory "$result"
        directories="$(find "$result" -maxdepth 2 -type d)"
        if [ "$(echo "$directories" | wc -l)" -eq 1 ]; then
          echo 'No sub directories available.'
          change_directory "$directories"
          break
        fi
        ;;
      ctrl-t)
        echo "$result" >&3
        exit 101
        break
        ;;
      *)
        check_directory "$result"
        change_directory "$result"
        break
        ;;
    esac
  done
}

use_cwd=
while [ "$#" -gt 0 ]; do
  case "$1" in
    c | -c)
      use_cwd=1
      ;;
    p | -p)
      source "$DOTFILES_DIR/scripts/cd/parent.sh"
      exit
      ;;
    *)
      usage
      ;;
  esac
  shift
done

if [ "$use_cwd" = "1" ]; then
  directories="$(find . -maxdepth 2 -type d ! -path .)"
else
  directories="\
$DOTFILES_DIR
$DOTFILES_TARGET_DIR
$DOTFILES_TARGET_DIR/.templates
$DOTFILES_TARGET_DIR/.pwn\
"

  if [ -d "$DOTFILES_TARGET_DIR/.resources" ]; then
    directories="$directories
$(find "$DOTFILES_TARGET_DIR/.resources" -maxdepth 1 -type d | grep -v .git)\
"
  else
    directories="$directories
$DOTFILES_TARGET_DIR/.resources\
"
  fi

  if [ -d ~/.private ]; then
    directories="$directories
$(find ~/.private -maxdepth 1 -type d | grep -v .git)\
"
  fi

  directories="$directories
$DOTFILES_TARGET_DIR/tmp
$DOTFILES_TARGET_DIR/.vim/plugged
$DOTFILES_TARGET_DIR/.config/tmux
$DOTFILES_TARGET_DIR/.asdf
$DOTFILES_TARGET_DIR/.config/coc\
"

  if [ -z "$DOTFILES_NON_INTRUSIVE_MODE" ]; then
    [ -d ~/vagrant_boxes ] || mkdir ~/vagrant_boxes
    [ -d ~/projects ] || mkdir ~/projects
    directories="$directories
$(find ~/vagrant_boxes -maxdepth 1 -type d)
$(find ~/projects -maxdepth 1 -type d)\
"
  fi

  if [ -f "$DOTFILES_TARGET_DIR/.cd_paths.sh" ]; then
    directories="$directories
$(sh "$DOTFILES_TARGET_DIR/.cd_paths.sh")\
"
  fi
fi

main_loop_with_fzf --prompt "(CTRL-D:go-further CTRL-Y:yank CTRL-T:edit)> " --expect="ctrl-d,ctrl-t"

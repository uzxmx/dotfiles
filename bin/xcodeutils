#!/usr/bin/env bash

set -eo pipefail

dotfiles_dir="$(realpath "$(dirname "$BASH_SOURCE")/..")"
xcodeutils_dir="$dotfiles_dir/scripts/xcodeutils"

usage() {
  cat <<-EOF
Utilities for building, archiving and uploading iOS apps.

Note: If you have several Xcode versions on your system, you need to be
consistent with a same version. When switching to a different version, it's
better to restart your system.

Subcommands:
  s, show           - show information of some type
  a, archive        - archive the product before it can be exported
  e, export         - export to an ipa file
  u, upload         - upload an ipa file to AppStore and TestFlight
  pgyer             - upload an ipa file to pgyer (https://www.pgyer.com)
  onestop           - archive, export and upload in one command
  show_entitlements - show entitlements of an IPA file (via codesign)
  verify_site       - verify apple-app-site-association file
  list_profiles     - list profiles on current system
EOF
  exit 1
}

alias_cmd() {
  local new_name="$1"
  local old_name="$2"
  eval "
    usage_$new_name() {
      usage_$old_name \"\$@\"
    }
    cmd_$new_name() {
      cmd_$old_name \"\$@\"
    }
  "
}

source "$xcodeutils_dir/common.sh"

run() {
  local cmd="$1"
  shift
  case "$1" in
    -h)
      type "usage_$cmd" &>/dev/null && "usage_$cmd"
      ;;
  esac
  "cmd_$cmd" "$@"
}

case "$1" in
  s | show | a | archive | e | export | u | \
  upload | pgyer | show_entitlements | verify_site | \
  onestop | list_profiles)
    case "$1" in
      s)
        name="show"
        ;;
      a)
        name="archive"
        ;;
      e)
        name="export"
        ;;
      u)
        name="upload"
        ;;
      *)
        name="$1"
        ;;
    esac
    source "$xcodeutils_dir/$name.sh"
    run "$@"
    ;;
  *)
    usage
    ;;
esac

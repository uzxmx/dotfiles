#!/usr/bin/env bash
#

set -e

export DOTFILES_DIR="${DOTFILES_DIR:-$(cd -- "$(dirname "$0")/.." &>/dev/null && pwd -P)}"

usage() {
  cat <<-EOF
Usage: $0

Utility to deal with git stashes. Use fzf to select a stash and operate on
the selection.
EOF
  exit 1
}

remainder=()
while [ $# -gt 0 ]; do
  case "$1" in
    -*)
      usage
      ;;
    *)
      remainder+=("$1")
      ;;
  esac
  shift
done

set - "${remainder[@]}"

source "$DOTFILES_DIR/scripts/lib/utils/common.sh"
source "$DOTFILES_DIR/scripts/lib/fzf.sh"
source "$DOTFILES_DIR/scripts/lib/prompt.sh"

query=
while true; do
  unset result
  output="$(git stash list --pretty="%gd %C(yellow)%h %>(14)%Cgreen%cr %C(blue)%gs")"
  [ -z "$output" ] && echo 'No stash available, exit' && exit
  bind_cmd="execute-silent(tmux display-popup -d '#{pane_current_path}' -T ' {1} ' -w 90% -h 90% -E \"$DOTFILES_DIR/bin/g show_commit {2} -d {2}~1\")"
  if [ "$(tput cols)" -ge 160 ]; then
    preview_window="right"
  else
    preview_window="bottom"
  fi
  call_fzf result --ansi --no-sort --query="$query" --print-query \
    --layout=reverse \
    --prompt '(CTRL-B:checkout CTRL-V|Enter:view CTRL-O:pop CTRL-D:drop)> ' \
    --preview "git stash show --name-status {2}" \
    --preview-window="$preview_window:50%:wrap" \
    --bind "ctrl-v:$bind_cmd" \
    --bind "enter:$bind_cmd" \
    --expect="ctrl-b,ctrl-o,ctrl-d" \
    <<<"$output"

  [ -z "${result[*]}" ] && break

  query="${result[0]}"
  key="${result[1]}"
  selection="${result[2]}"

  ref=$(echo "$selection" | awk '{print $1}')
  sha=$(echo "$selection" | awk '{print $2}')

  case "$key" in
    ctrl-b)
      git stash branch "stash-$sha" "$sha"
      break
      ;;
    ctrl-o)
      git stash pop "$ref"
      break
      ;;
    ctrl-d)
      reply=$(yesno "Are you sure you want to drop $ref? (y/N)" "no")
      if [ "$reply" = "yes" ]; then
        git stash drop "$ref"
      fi
      ;;
  esac
done

#!/usr/bin/env bash

set -eo pipefail

export DOTFILES_DIR="${DOTFILES_DIR:-$(cd -- "$(dirname "$0")/.." &>/dev/null && pwd -P)}"
export DOTFILES_TARGET_DIR="${DOTFILES_TARGET_DIR:-$HOME}"
asdf_dir="$DOTFILES_DIR/scripts/asdf"

source "$DOTFILES_DIR/scripts/lib/cli.sh"

if ! check_command asdf &>/dev/null; then
  if [ -n "$DOTFILES_NON_INTRUSIVE_MODE" ]; then
    "$DOTFILES_DIR/scripts/install/asdf"
  else
    abort "Please install 'asdf' first."
  fi
fi

if [ -z "$ASDF_DATA_DIR" ]; then
  export ASDF_DATA_DIR="${DOTFILES_TARGET_DIR:-$HOME}/.asdf"
fi

usage() {
  cat <<-EOF
Wrapper for asdf utility.

Subcommands:
  s, shell   - set the package version in the current shell
  c, current - display current version set
  l, list    - list installed versions
EOF
  exit 1
}

alias_cmd() {
  local new_name="$1"
  local old_name="$2"
  eval "
    usage_$new_name() {
      usage_$old_name \"\$@\"
    }
    cmd_$new_name() {
      cmd_$old_name \"\$@\"
    }
  "
}

run() {
  local cmd="$1"
  shift
  case "$1" in
    -h)
      type "usage_$cmd" &>/dev/null && "usage_$cmd"
      ;;
  esac
  "cmd_$cmd" "$@"
}

if [ -z "$1" ]; then
  set - shell
fi

case "$1" in
  s | shell)
    source "$asdf_dir/shell.sh"
    run "$@"
    ;;
  c | current)
    source "$asdf_dir/current.sh"
    run "$@"
    ;;
  l | list)
    source "$asdf_dir/list.sh"
    run "$@"
    ;;
  -h)
    usage
    ;;
  -)
    shift
    asdf "$@"
    ;;
  *)
    asdf "$@"
    ;;
esac

#!/usr/bin/env bash

set -eo pipefail

dotfiles_dir="$(realpath "$(dirname "$BASH_SOURCE")/..")"

usage() {
  cat <<-EOF
Usage: v <command line...>

Execute the command line and show the output by opening an editor. This utility
is suitable for the command line which has long output.

Examples:
  $> v git status
  $> v git diff
EOF
  exit 1
}

[ "$#" = 0 ] && usage

case "$1" in
  "" | -*)
    usage
    ;;
  *)
    source "$dotfiles_dir/scripts/lib/tmpfile.sh"
    create_tmpfile tmpfile
    "$@" &>"$tmpfile" || true
    # Update the status line before the file is read.
    # `cat` the file in a terminal so special control codes can be handled.
    # Map `q` to `:q<enter>` to exit quickly.
    vi --cmd "let g:airline_section_c='$*'" +"term cat $tmpfile" +"map q :q<enter>"
    ;;
esac

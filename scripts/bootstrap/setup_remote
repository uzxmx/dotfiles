#!/usr/bin/env bash

set -eo pipefail

export DOTFILES_DIR="${DOTFILES_DIR:-$(cd -- "$(dirname "$0")/../.." &>/dev/null && pwd -P)}"

usage() {
  cat <<-EOF
Usage: $0 <-f | --vagrant | -o user@host>

Utility to setup dotfiles repository on the remote system through SSH.

By default it sets up in non-intrusive mode.

Options:
  -f Select a remote host from '~/.ssh_hosts' by fzf
  --vagrant SSH via vagrant
  -o <ssh-options> SSH options
  --intrusive Intrusive setup
  --proxy <proxy> Default is 'localhost:8125'
  --no-proxy Do not use proxy

Examples:
  $> $0 -o "user@host -i /path/to/identify/file" --no-proxy
EOF
  exit 1
}

proxy="localhost:8125"

while [ "$#" -gt 0 ]; do
  case "$1" in
    -f)
      use_fzf=1
      ;;
    -o)
      shift
      ssh_opts="$1"
      ;;
    --vagrant)
      use_vagrant=1
      ;;
    --intrusive)
      intrusive_setup=1
      ;;
    --proxy)
      shift
      proxy="$1"
      ;;
    --no-proxy)
      no_proxy=1
      ;;
    *)
      usage
      ;;
  esac
  shift
done

[ -z "$use_fzf" -a -z "$use_vagrant" -a -z "$ssh_opts" ] && echo "You need to specify one of [-f], [--vagrant], [-o] options." && exit

opts=()
if [ "$intrusive_setup" = 1 ]; then
  file="$(dirname "$0")/setup"
  opts=(-t minimal --update-repo -v)
  if [ -z "$no_proxy" ]; then
    opts+=(-p localhost:8123)
  fi
else
  source "$DOTFILES_DIR/scripts/lib/tmpfile.sh"
  source "$DOTFILES_DIR/scripts/lib/awk/find_line.sh"
  source "$DOTFILES_DIR/scripts/lib/awk/insert_file.sh"

  create_tmpfile file
  cp "$(dirname "$0")/inc/non_intrusive_mode_setup" "$file"

  lineno="$(awk_find_line "$file" "#__ADD_USER_SCRIPT_STUB__")"
  awk_insert_file "$DOTFILES_DIR/scripts/misc/add_user.sh" "$file" "$lineno"

  if [ -n "$no_proxy" ]; then
    opts+=(--no-proxy)
  fi
  ssh_pub_key="$(cat ~/.ssh/id_rsa.pub)"
  opts+=(--ssh-pub-key "'$ssh_pub_key'")
fi

if [ "$use_vagrant" = "1" ]; then
    vagrant ssh -- $ssh_opts -R "8123:$proxy" "bash -s -- ${opts[@]}" < "$file"
else
  if [ -z "$ssh_opts" ]; then
    "$DOTFILES_DIR/bin/ssh-utils" ssh --http-proxy "$proxy" - "bash -s -- ${opts[@]}" < "$file"
  else
    ssh $ssh_opts -R "8123:$proxy" "bash -s -- ${opts[@]}" < "$file"
  fi
fi

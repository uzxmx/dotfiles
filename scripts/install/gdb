#!/usr/bin/env bash
#
# Install gdb (https://www.gnu.org/software/gdb/).

set -eo pipefail

export DOTFILES_DIR="${DOTFILES_DIR:-$(cd -- "$(dirname "$0")/../.." &>/dev/null && pwd -P)}"
export DOTFILES_TARGET_DIR="${DOTFILES_TARGET_DIR:-$HOME}"

version="12.1"
component=gdb
temp_dir=/tmp/gdb

usage() {
  cat <<-EOF
Usage: $0 [version]

Install gdb.

Options:
  -c <compnent> Component to make, supported values are 'gdb', 'gdbserver', default is 'gdb'
  --temp-dir <dir> Temp dir to store the src and build files, default is '/tmp/gdb'
EOF
  exit 1
}

parse_args="
  -c)
    shift
    component=\"\$1\"
    ;;
  --temp-dir)
    shift
    temp_dir=\"\$1\"
    ;;
  -*)
    usage
    ;;
  *)
    version=\"\$1\"
    ;;
"

source "$DOTFILES_DIR/scripts/lib/install.sh"

dest_path="$DOTFILES_TARGET_DIR/opt/gdb-$version"
[ -e "$dest_path/bin/gdb" ] && exit

check_makeinfo() {
  check_command makeinfo &> /dev/null && return

  if has_yum; then
    sudo yum install -y texinfo
  else
    abort 'Please install `makeinfo` command beforehand.'
  fi
}

install_fn() {
  local dir="$(find "$1" -maxdepth 1 -type d | grep -v '^\.$' | tail -1)"
  cd "$dir"

  mkdir -p build
  cd build
  # See https://sourceware.org/gdb/wiki/BuildingCrossGDBandGDBserver
  ../configure --prefix="$dest_path"
  if [ "$component" = "gdb" ]; then
    make all-gdb
    make install-gdb
  elif [ "$component" = "gdbserver" ]
    make all-gdbserver
    make install-gdbserver
  fi
}

check_makeinfo
download_and_install "https://mirrors.tuna.tsinghua.edu.cn/gnu/gdb/gdb-$version.tar.xz" "$temp_dir"

#!/usr/bin/env bash
#
# Install coc.nvim extensions. (https://github.com/neoclide/coc.nvim/wiki/Install-coc.nvim#automation-script)

. $(dirname "$BASH_SOURCE")/../lib/install.sh

usage() {
  cat <<-EOF
Usage: $0 <extension>
Install coc extensions.

Supported extensions include:

  * ultisnips
  * java
  * python
  * clangd
  * omnisharp
  * sourcekit
  * tsserver
EOF
  exit 1
}

rootdir="$HOME/.config/coc/extensions"

mkdir -p "$rootdir"
cd "$rootdir"

npm_install() {
  npm install --global-style --ignore-scripts --no-bin-links --no-package-lock --only=prod "$@"
}

extension="$1"
extensions=(
  ultisnips
  java
  python
  clangd
  omnisharp
  sourcekit
  tsserver
)
if [ -z "$extension" ]; then
  extension="$(IFS=$'\n'; echo "${extensions[*]}" | fzf +m)"
  [ -z "$extension" ] && exit 1
fi

case "$extension" in
  ultisnips)
    npm_install coc-ultisnips@1.2.3
    ;;
  java)
    npm_install coc-java@1.5.3
    serverdir="coc-java-data/server"
    [ -n "$(ls "$serverdir" 2>/dev/null)" ] && exit
    tmpfile="$(mktemp)"
    handle_exit() {
      [ -e "$tmpfile" ] && rm "$tmpfile"
    }
    trap handle_exit EXIT
    mkdir -p "$serverdir"
    curl -o "$tmpfile" -L "http://download.eclipse.org/jdtls/snapshots/jdt-language-server-latest.tar.gz"
    tar zxf "$tmpfile" -C "$serverdir"
    npm_install coc-java-dependency@0.1.2
    echo "You need to check whether JAVA_HOME env is configured, otherwise, it will complain when launching vim."
    ;;
  python)
    npm_install coc-python@1.2.13
    ;;
  clangd)
    npm_install coc-clangd@0.4.7
    ;;
  omnisharp)
    npm_install coc-omnisharp@0.0.28
    ;;
  sourcekit)
    npm_install coc-sourcekit@0.0.2
    ;;
  tsserver)
    npm_install coc-sourcekit@1.5.1
    ;;
  *)
    usage
    ;;
esac
